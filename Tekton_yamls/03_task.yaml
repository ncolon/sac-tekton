apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: motd-build-task
spec:
  inputs:
    resources:
    - name: git-source-motd
      type: git
    - name: docker-image-motd
      type: image
    params:
      - name: BUILDER_IMAGE
        description: The location of the buildah builder image.
        default: "quay.io/buildah/stable:v1.12.0"
      - name: DOCKERFILE
        description: Path to the Dockerfile to build.
        default: ./Dockerfile
      - name: CONTEXT
        description: Path to the directory to use as context.
        default: .
      - name: TLSVERIFY
        description: Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)
        default: "true"
  steps:
  - name: build-push
    image: $(inputs.params.BUILDER_IMAGE)
    workingDir: /workspace/git-source-motd
    command: ["/bin/bash"]
    args:
      - -c
      - |
        set -e
        SHORT_GIT_HASH="$(cat .git/FETCH_HEAD | awk '{print substr($1,0,7)}')"
        NEW_IMAGE_ID="$(inputs.resources.docker-image-motd.url):$SHORT_GIT_HASH"
        echo "SHORT_GIT_HASH = $SHORT_GIT_HASH"
        echo "Building Image $NEW_IMAGE_ID"
        buildah bud --tls-verify="$(inputs.params.TLSVERIFY)" --storage-driver=vfs -t "$NEW_IMAGE_ID" "$(inputs.params.CONTEXT)"
        echo "Listing images."
        buildah images --storage-driver=vfs
        echo "Pushing Image $NEW_IMAGE_ID"
        buildah push --storage-driver=vfs --tls-verify="$(inputs.params.TLSVERIFY)" "$NEW_IMAGE_ID" "docker://$NEW_IMAGE_ID"
        echo "NEW_IMAGE_ID=$NEW_IMAGE_ID" >> /workspace/env-config
    securityContext:
      privileged: true
    volumeMounts:
      - name: varlibcontainers
        mountPath: /var/lib/containers
  volumes:
    - name: varlibcontainers
      emptyDir: {}
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: motd-deploy-task
spec:
  inputs:
    resources:
      - name: git-source-motd
        type: git
      - name: docker-image-motd
        type: image
    params:
      - name: pathToYamlFile
        description: The path to the yaml file to deploy within the git source
      - name: pathToDeployablesFile
        description: The path to the deployable file to deploy within the git source
  steps:
  - name: modify-app-deploy-yaml
    image: registry.access.redhat.com/ubi8/ubi:latest
    workingDir: /workspace/git-source-motd
    command: ["/bin/bash"]
    args:
      - -c
      - |
        set -e
        SHORT_GIT_HASH="$(cat .git/FETCH_HEAD | awk '{print substr($1,0,7)}')"
        NEW_IMAGE_ID="$(inputs.resources.docker-image-motd.url):$SHORT_GIT_HASH"
        echo "SHORT_GIT_HASH = $SHORT_GIT_HASH"
        echo "Using Image $NEW_IMAGE_ID"
        sed -i -e 's|__IMAGE__|'"$NEW_IMAGE_ID"'|g' /workspace/git-source-motd/$(inputs.params.pathToDeployablesFile)/deployable.yaml
  - name: deploy-deployable
    image: lachlanevenson/k8s-kubectl
    command: ["kubectl"]
    args:
        - "apply"
        - "-f"
        - "/workspace/git-source-motd/$(inputs.params.pathToDeployablesFile)/deployable.yaml"
  - name: deploy-service
    image: lachlanevenson/k8s-kubectl
    command: ["kubectl"]
    args:
        - "apply"
        - "-f"
        - "/workspace/git-source-motd/$(inputs.params.pathToDeployablesFile)/service.yaml"
  - name: deploy-route
    image: lachlanevenson/k8s-kubectl
    command: ["kubectl"]
    args:
        - "apply"
        - "-f"
        - "/workspace/git-source-motd/$(inputs.params.pathToDeployablesFile)/route.yaml"
